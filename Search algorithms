# Linear search algorithm

words = ['cat', 'dog', 'bird', 'parrot', 'lion', 'tiger', 'bear', 'bird']
nums = [1612, 1048, 76, 666, 1, 12, 12]

def linear_search_for (target, the_list): # Function to search linearly through a list for a target value
    length = len(the_list)
    index_list = []
    for index in range(length): # Iterate through the list (using length so that we can record the index)
        if the_list[index] == target: # If target is found, record position
            index_list.append(index)#
    if index_list == []: # If target is not found in list
        print('Value not found')
    elif len(index_list) > 1: # If target was found in multiple positions
        print('Value', target, 'found at positions', index_list)
    else: # If target is found in one position
        print('Value', target, 'found at position', index_list[0])
    return index_list # Return position(s) target was found at


# Binary search algorithm
# Not in function yet
# I should do that tbh

order = [7, 32, 44, 57, 64, 78, 88, 92, 104, 113, 128]

def get_midpoint(start, end):
    length = end - start
    midpoint = start + int(length / 2)
    return midpoint
    
keep_going = True
start = 0
end = len(order)-1

target = int(input('Enter a value to search for :'))

print()

while keep_going:
    #print('Iteration, start =', start, 'end =', end)
    print('Iteration running...')
    midpoint_pos = get_midpoint(start, end)
    midpoint = order[midpoint_pos]
    if midpoint == target:
        print('Value', target, 'found at position', midpoint_pos)
        keep_going = False
    elif midpoint > target:
        end = midpoint_pos
        if start == end:
            print('Value', target, 'too low')
            keep_going = False
    elif midpoint < target:
        start = midpoint_pos
        if end - start == 1:
            if order[end] == target:
                print('Value', target, 'found at position', end)
            else:
                print('Value', target, 'too high')
            keep_going = False
